import org.openhab.model.script.actions.Timer

val logName = "dehumidifier"

var Timer timer = null

val MAX_HUMIDITY_STARTUP = 68
val DEHUMIDIFIER_ON_TIME_MIN = 180

//------------------------------------------------------------
// Startup
rule "Dehumidifier Startup"
when
  System started
then
  maxHumidity.postUpdate(MAX_HUMIDITY_STARTUP)
  mystrom_switch.sendCommand(OFF)
end

//------------------------------------------------------------
// High humidity automatic start
rule "Dehumidifier Maximum Humidity"
when
  Item shellyHT_humid changed or    // measured humidity changed
  Item maxHumidity changed or       // max humidity changed
  Item mystrom_switch changed       // timer exeeded / UI modification
then
  if (shellyHT_humid.state >= maxHumidity.state)
  {
    mystrom_switch.sendCommand(ON)
    logInfo(logName, "Start dehumidifier. Humidity: " + shellyHT_humid.state)
  }
end

//------------------------------------------------------------
// Automatic stop after a timeout
rule "Dehumidifier Timeout"
when
  Item mystrom_switch changed
then
  if (mystrom_switch.state.toString == "ON")
  {
    if (timer === null)
    {
      timer = createTimer(now.plusMinutes(DEHUMIDIFIER_ON_TIME_MIN)) [|
            mystrom_switch.sendCommand(OFF)
            logInfo(logName, "Timer expiration, turned OFF")
            timer = null   // reset the timer
        ]
    }
  }
end
