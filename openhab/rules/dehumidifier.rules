val logName = "dehumidifier"

var Timer timer = null

val DEHUMIDIFIER_ON_TIME_MIN = 10

rule "Dehumidifier Startup"
when
  System started
then
  dehumidifier_switch.sendCommand(OFF)
end

rule "Dehumidifier with Timeout"
when
  Item dehumidifier_trigger changed or      // state change
  Time cron "0 0/1 * * * ?"                 // every minute
then
  if (dehumidifier_trigger.state == ON)
  {
    dehumidifier_switch.sendCommand(ON)
    //logInfo(logName, "Dehumidifier ON")

    if (timer !== null) {
      //logInfo(logName, "Timer rescheduled")
      timer.reschedule(now.plusMinutes(DEHUMIDIFIER_ON_TIME_MIN))
    } else {
      timer = createTimer(now.plusMinutes(DEHUMIDIFIER_ON_TIME_MIN), [ |
        dehumidifier_switch.sendCommand(OFF)
        //logInfo(logName, "Timer expiration")
        timer = null
      ])
      //logInfo(logName, "Timer created")
    }
  }
end
