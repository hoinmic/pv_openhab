Strategies {
    everyMinute : "0 * * * * ?"
    everyThreeMinute : "0 */3 * * * ?"
    everyTenMinute : "0 */10 * * * ?"
    everyHour : "0 0 * * * ?"
    everyDay  : "0 0 0 * * ?"
}

Items {
    // Consumers Storage
    dehumidifier_trigger : strategy = everyThreeMinute, everyChange
    dehumidifier_switch : strategy = everyThreeMinute, everyChange, restoreOnStartup

    boiler_33_percent_trigger : strategy = everyThreeMinute, everyChange
    boiler_100_percent_trigger : strategy = everyThreeMinute, everyChange
    boiler_phase1_switch : strategy = everyThreeMinute, everyChange, restoreOnStartup
    boiler_phase2_switch : strategy = everyThreeMinute, everyChange, restoreOnStartup
    boiler_phase3_switch : strategy = everyThreeMinute, everyChange, restoreOnStartup

    // Power Storage
    filtered_power_inverter : strategy = everyMinute, everyChange
    filtered_power_grid : strategy = everyMinute, everyChange
    filtered_power_consumption : strategy = everyMinute, everyChange

    // Tariff Storage continous
    tariff : strategy = everyTenMinute, everyChange
    Energy_Returned_Grid_High_Tariff : strategy = everyThreeMinute, everyChange, restoreOnStartup
    Energy_Returned_Grid_Low_Tariff : strategy = everyThreeMinute, everyChange, restoreOnStartup
    Energy_Consumed_Grid_High_Tariff : strategy = everyThreeMinute, everyChange, restoreOnStartup
    Energy_Consumed_Grid_Low_Tariff : strategy = everyThreeMinute, everyChange, restoreOnStartup
    received_money_returned_grid : strategy = everyThreeMinute, everyChange, restoreOnStartup
    paid_money_consumption_grid : strategy = everyThreeMinute, everyChange, restoreOnStartup

    // Energy Storage Continuous
    Energy_Inverter : strategy = everyMinute, everyChange, restoreOnStartup
    Energy_Grid : strategy = everyMinute, everyChange, restoreOnStartup
    Energy_Returned_Grid : strategy = everyMinute, everyChange, restoreOnStartup

    Energy_Household_Consumption : strategy = everyMinute, everyChange, restoreOnStartup
    Energy_Self_Consumption : strategy = everyMinute, everyChange, restoreOnStartup

    // Energy Storage Day
    // Day_Energy_Inverter : strategy = everyThreeMinute, everyChange, restoreOnStartup
    // Day_Energy_Grid : strategy = everyThreeMinute, everyChange, restoreOnStartup
    // Day_Energy_Returned_Grid : strategy = everyThreeMinute, everyChange, restoreOnStartup

    // Day_Energy_Household_Consumption : strategy = everyThreeMinute, everyChange, restoreOnStartup
    // Day_Energy_Self_Consumption : strategy = everyThreeMinute, everyChange, restoreOnStartup

    Day_Degree_Of_Autonomy : strategy = everyThreeMinute, everyChange, restoreOnStartup
    Day_Rate_Self_Consumption : strategy = everyThreeMinute, everyChange, restoreOnStartup

    Energy_Inverter_Midnight : strategy = everyHour, everyChange, restoreOnStartup
    Energy_Grid_Midnight : strategy = everyHour, everyChange, restoreOnStartup
    Energy_Returned_Grid_Midnight : strategy = everyHour, everyChange, restoreOnStartup

    // Energy Storage Month (Grafana cant compute differences between months)
    Month_Energy_Inverter : strategy = everyTenMinute, everyChange, restoreOnStartup
    Month_Energy_Grid : strategy = everyTenMinute, everyChange, restoreOnStartup
    Month_Energy_Returned_Grid : strategy = everyTenMinute, everyChange, restoreOnStartup

    Month_Energy_Household_Consumption : strategy = everyTenMinute, everyChange, restoreOnStartup
    Month_Energy_Self_Consumption : strategy = everyTenMinute, everyChange, restoreOnStartup

    Month_Degree_Of_Autonomy : strategy = everyHour, everyChange, restoreOnStartup
    Month_Rate_Self_Consumption : strategy = everyHour, everyChange, restoreOnStartup

    Energy_Inverter_Month : strategy = everyHour, everyChange, restoreOnStartup
    Energy_Grid_Month : strategy = everyHour, everyChange, restoreOnStartup
    Energy_Returned_Grid_Month : strategy = everyHour, everyChange, restoreOnStartup

    // Day information
    timeOfDay : strategy = everyTenMinute, everyChange

    // Dishwasher
    dishwasherMachineStatus : strategy = everyThreeMinute, everyChange
    dishwasher_trigger : strategy = everyThreeMinute, everyChange

    // Washing Machine
    washingMachineStatus : strategy = everyThreeMinute, everyChange
    washingMachine_trigger : strategy = everyThreeMinute, everyChange
}
